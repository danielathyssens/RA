# @package _global_
# problem args

problem: "cvrp"
graph_size: 50
coords_dist: 'uchoa'
out_name: ${problem}_${graph_size}_${coords_dist}
data_file_path: data/test_data/${problem}/${coords_dist}/${problem}${graph_size}/val_seed123_size512.pt
# data/test_data/${problem}/${coords_dist}/${problem}${graph_size}/E_R_6_seed123_size512.pt
normalize_data: True
checkpoint_load_path: models/NeuroLS/checkpoints/cvrp_100_uniform/SELECT_EPSILON-SELECT_LS+-ALL/ep22_model_rew=0.005784.ckpt
num_iters: 100

# general VecEnv cfg
env_cfg:
  share_memory: False
  fixed_dataset: False
  create_nbh_graph: True    # automatically set to False for FFEncoder
  k_nbh_frac: 16

# RP Env cfg
# env_kwargs:
#  generator_args:
#    coords_sampling_dist: ${coords_dist}
#  sampling_args:
#    sample_size: 1024
#    graph_size: ${graph_size}
#    k: 16
#    cap: 40

# RP Env cfg
env_kwargs:
  generator_args:
    coords_sampling_dist: ${coords_dist}
    # if None in the following two args, then all are mixed
    depot_type: E # Depot Position (uchoa only): C = central (500, 500), E = eccentric (0, 0), R = random
    customer_type: R # Customer Position (uchoa only): C = Clustered, RC = Random-Clustered (half half), R = Random
    demand_type: 0  # if None demand will be a mixture of above demand distributions
  sampling_args:
    sample_size: 1024
    graph_size: ${graph_size}
    k: 16
    cap: 40
    max_cap_factor: # factor of additional capacity w.r.t. a norm capacity of 1.0 per vehicle
    n_depots: 1 #number of depots (default = 1)

# overrides for validation env
val_env_cfg:
  fixed_dataset: True
  data_file_path: data/test_data/${problem}/${coords_dist}/${problem}${graph_size}/val_seed123_size512.pt


tester_cfg:
  # overrides for test env
  test_env_cfg:
    fixed_dataset: True
    data_file_path: data/test_data/${problem}/${coords_dist}/${problem}${graph_size}/test_seed234_size1000.pt
